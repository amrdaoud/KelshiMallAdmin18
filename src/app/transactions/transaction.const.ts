import { CurrencyPipe } from "@angular/common";
import { LocaleDatePipe } from "../app-reusables/common/locale-date.pipe";
import { ColumnDef, DataTableButtonObject, DataTableFilter } from "../app-reusables/data-table/data-table.models";
import { TransactionFilterModel } from "./transactions";
import { of } from "rxjs";

export const transactionConst :
{columns: ColumnDef[], initialFilter?: TransactionFilterModel, filters?: DataTableFilter[], menuButtons?: DataTableButtonObject[], selectBtns?: DataTableButtonObject[]} = {
    columns: [
        {Name: "Credit", Property: "creditAccountName", Tooltip:"creditAccountNumber"},
        {Name: "Debit", Property: "debitAccountName", Tooltip:"debitAccountNumber"},
        {Name: "Reference", Property: "reference"},
        {Name: "Description", Property: "description"},
        {Name: "Date", Property: "transactionDate", IsSort: true, Pipe: LocaleDatePipe, PipeArgs: 'MMM dd, y, hh:mm a'},
        {Name: "Amount", Property:"amount", IsSort: true, Pipe: CurrencyPipe},
        // {Name: "Operation", Property:"operationType", IsSort: true, Highlights: [
        //     {Operation: '=', Value: "D", AltText: "In", Color: 'rgb(26, 213, 152)', BackgroundColor: 'rgba(26, 213, 152,0.3)'},
        //     {Operation: '=', Value: "C",AltText: "Out", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'}
        // ]},
        {Name: "Status", Property: "status", IsSort: true, Highlights: [
            {Operation: '=', Value: "Completed", Color: 'rgb(26, 213, 152)', BackgroundColor: 'rgba(26, 213, 152,0.3)'},
            {Operation: '=', Value: "Pending", Color: 'rgb(255,166,97)', BackgroundColor: 'rgba(255,166,97,0.3)'},
            {Operation: '=', Value: "Failed", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'},
            {Operation: '=', Value: "Rejected", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'}
        ]},
        {Name: "Reason", Property: "statusReason"},
        {Name: "Changed By", Property: "systemUserName"}
    ],
    initialFilter: {
        PageIndex: 0,
        PageSize: 30,
        SortActive: "transactionDate",
        SortDirection: "desc"
    },
    filters: [
        {
            Type: 'twoDates',
            ControlName: 'DateFrom',
            PlaceHolder: 'Start Date',
            ControlName2: 'DateTo',
            PlaceHolder2: "End Date",
            UpdateOn: 'blur'
        },
        {
            Type: 'select',
            ControlName: 'Status',
            DisplayProperty: 'Name',
            ValueProperty: 'Id',
            PlaceHolder: 'Status',
            UpdateOn: 'change',
            Data: of([{Id: 'Completed', Name: 'Completed'}, {Id: 'Pending', Name: 'Pending'}, {Id: 'Failed', Name: 'Failed'}, {Id: 'Rejected', Name: 'Rejected'}])
        }
    ],
    menuButtons: [
        {
            Text: 'Attachment',
            Icon: 'attach_file',
            MatColor: 'primary',
            HideWhen: {
                Property: 'attachmentUrl',
                Value: null
            }
        },
        {
            Text: 'Accept Payment',
            Icon: 'verified_user',
            MatColor: 'primary',
            ShowWhen: {
                Property: 'status',
                Value: 'Pending'
            }
        },
        {
            Text: 'Reject Payment',
            Icon: 'gpp_bad',
            MatColor: 'warn',
            ShowWhen: {
                Property: 'status',
                Value: 'Pending'
            }
        },
        // {
        //     Text: 'Deactivate Account',
        //     Icon: 'toggle_off',
        //     MatColor: 'warn',
        //     HideWhen: {
        //         Property: 'isActive',
        //         Value: false
        //     }
        // }
    ],
}


export const redeemConsts :
{columns: ColumnDef[], initialFilter?: TransactionFilterModel, filters?: DataTableFilter[], btns?:DataTableButtonObject[], menuButtons?: DataTableButtonObject[], selectBtns?: DataTableButtonObject[]} = {
    columns: [
        {Name: "Code", Property: "redeemCode"},
        {Name: "Generated By", Property: "generatedBy", IsSort: true},
        {Name: "Issued on", Property: "issuingDate", IsSort: true, Pipe: LocaleDatePipe, PipeArgs: 'MMM dd, y, hh:mm a'},
        {Name: "Valid till", Property: "validFor", IsSort: true, Pipe: LocaleDatePipe, PipeArgs: 'MMM dd, y, hh:mm a'},
        {Name: "Amount", Property:"value", IsSort: true, Pipe: CurrencyPipe},
        {Name: "Total", Property: "totalGenerated", IsSort: true},
        {Name: "Used", Property: "totalUsed", IsSort: true},
        {Name: "Available", Property: "totalAvailable", IsSort: true},
        // {Name: "Operation", Property:"operationType", IsSort: true, Highlights: [
        //     {Operation: '=', Value: "D", AltText: "In", Color: 'rgb(26, 213, 152)', BackgroundColor: 'rgba(26, 213, 152,0.3)'},
        //     {Operation: '=', Value: "C",AltText: "Out", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'}
        // ]},
        {Name: "Note", Property: "note"},
        {Name: "J Description", Property: "journalDescription"},
        {Name: "Status", Property: "status", IsSort: true, Highlights: [
            {Operation: '=', Value: "Active", Color: 'rgb(26, 213, 152)', BackgroundColor: 'rgba(26, 213, 152,0.3)'},
            {Operation: '=', Value: "Used", Color: 'rgb(255,166,97)', BackgroundColor: 'rgba(255,166,97,0.3)'},
            {Operation: '=', Value: "Expired", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'},
            {Operation: '=', Value: "Inactive", Color: 'rgb(234, 58, 61)', BackgroundColor: 'rgba(234, 58, 61, 0.2)'}
        ]}
    ],
    initialFilter: {
        PageIndex: 0,
        PageSize: 30,
        SortActive: "issuingDate",
        SortDirection: "desc"
    },
    filters: [
        {
            Type: 'twoDates',
            ControlName: 'DateFrom',
            PlaceHolder: 'Start Date',
            ControlName2: 'DateTo',
            PlaceHolder2: "End Date",
            UpdateOn: 'blur'
        },
        {
            Type: 'select',
            ControlName: 'Status',
            DisplayProperty: 'Name',
            ValueProperty: 'Id',
            PlaceHolder: 'Status',
            UpdateOn: 'change',
            Data: of([{Id: 'Active', Name: 'Active'}, {Id: 'Expired', Name: 'Expired'}, {Id: 'Used', Name: 'Used'}, {Id: 'Inactive', Name: 'Inactive'}])
        }
    ],
    btns: [
        {
            Text: 'Generate Redeems',
            Icon: 'qr_code_scanner',
            MatColor: 'primary',
        }
    ],
}
